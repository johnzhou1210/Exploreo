generator client {
  provider = "dart run orm"
  output   = "generated_dart_client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  username  String?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  trips     Trip[]

  @@map("users")
}

model Trip {
  id          Int      @id @default(autoincrement())
  tripName    String   @map("trip_name")
  description String?  @map("description")
  startDate   DateTime @map("start_date")
  endDate     DateTime @map("end_date")
  places      Place[]
  users       User[]
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("trips")
}

model Place {
  id          Int            @id @default(autoincrement())
  placeName   String         @map("place_name")
  description String?
  note        String?
  trip        Trip           @relation(fields: [tripId], references: [id])
  tripId      Int            @map("trip_id")
  tags        TagsOnPlaces[]
  createdAt   DateTime       @default(now()) @map("created_at")
  updatedAt   DateTime       @updatedAt @map("updated_at")

  @@map("places")
}

model Tag {
  id        Int            @id @default(autoincrement()) @map("id")
  tagName   String         @unique @map("tag_name")
  places    TagsOnPlaces[]
  createdAt DateTime       @default(now()) @map("created_at")
  updatedAt DateTime       @updatedAt @map("updated_at")

  @@map("tags")
}

model TagsOnPlaces {
  placeId Int   @map("place_id")
  tagId   Int   @map("tag_id")
  place   Place @relation(fields: [placeId], references: [id])
  tag     Tag   @relation(fields: [tagId], references: [id])

  @@id([placeId, tagId])
  @@map("places_tags")
}
