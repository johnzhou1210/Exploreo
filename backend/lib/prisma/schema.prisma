generator client {
  provider = "dart run orm"
  output   = "generated_dart_client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String         @id @default(uuid()) @db.Uuid
  firebaseUid       String         @unique @map("firebase_uid")
  email             String         @unique
  username          String?        @unique
  createdAt         DateTime       @default(now()) @map("created_at")
  updatedAt         DateTime       @updatedAt @map("updated_at")
  password          String?
  loginType         LoginType      @default(EMAIL) @map("login_type")
  providerId        String         @unique @map("provider_id")
  profilePictureUrl String?        @map("profile_picture_url")
  bio               String?
  trips             Trip[]
  UsesrOnTrips      UsersOnTrips[]

  @@map("users")
}

enum LoginType {
  EMAIL
  GOOGLE
  FACEBOOK
}

model Trip {
  id           String         @id @default(uuid()) @db.Uuid
  tripName     String         @map("trip_name")
  description  String?        @map("description")
  startDate    DateTime       @map("start_date")
  endDate      DateTime       @map("end_date")
  places       Place[]
  users        User[]
  createdAt    DateTime       @default(now()) @map("created_at")
  updatedAt    DateTime       @updatedAt @map("updated_at")
  isShared     Boolean        @default(false) @map("is_shared")
  UsesrOnTrips UsersOnTrips[]

  @@map("trips")
}

model UsersOnTrips {
  id        String   @id @default(uuid()) @db.Uuid
  userId    String   @map("user_id") @db.Uuid
  user      User     @relation(fields: [userId], references: [id])
  tripId    String   @map("trip_id") @db.Uuid
  trip      Trip     @relation(fields: [tripId], references: [id])
  role      Role     @default(VIEWER)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users_on_trips")
}

enum Role {
  OWNER
  COLLABORATOR
  VIEWER
}

model Place {
  id          String    @id @default(uuid()) @db.Uuid
  placeName   String    @map("place_name")
  description String?
  note        String?
  startDate   DateTime? @map("start_date")
  endDate     DateTime? @map("end_date")
  trip        Trip      @relation(fields: [tripId], references: [id])
  tripId      String    @map("trip_id") @db.Uuid
  tags        Tag[]
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")

  @@map("places")
}

model Tag {
  id        String   @id @default(uuid()) @db.Uuid
  tagName   String   @unique @map("tag_name")
  places    Place[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("tags")
}
