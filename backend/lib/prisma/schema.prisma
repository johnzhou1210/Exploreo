generator client {
  provider = "dart run orm"
  output   = "generated_dart_client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model place_tags {
  place_id Int
  tag_id   Int
  places   places @relation(fields: [place_id], references: [place_id], onDelete: NoAction, onUpdate: NoAction)
  tags     tags   @relation(fields: [tag_id], references: [tag_id], onDelete: NoAction, onUpdate: NoAction)

  @@id([place_id, tag_id])
}

model places {
  place_id    Int          @id @default(autoincrement())
  trip_id     Int
  user_id     Int
  title       String       @db.VarChar(100)
  description String?
  start_time  DateTime     @db.Timestamp(6)
  end_time    DateTime?    @db.Timestamp(6)
  place_tags  place_tags[]
  trips       trips        @relation(fields: [trip_id], references: [trip_id], onDelete: NoAction, onUpdate: NoAction)
  users       users        @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
}

model tags {
  tag_id      Int          @id @default(autoincrement())
  tag_name    String       @unique @db.VarChar(50)
  description String?
  place_tags  place_tags[]
}

model trips {
  trip_id     Int       @id @default(autoincrement())
  user_id     Int
  title       String    @db.VarChar(100)
  description String?
  start_date  DateTime  @db.Date
  end_date    DateTime? @db.Date
  created_at  DateTime? @default(now()) @db.Timestamp(6)
  updated_at  DateTime? @default(now()) @db.Timestamp(6)
  places      places[]
  users       users     @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  user_id    Int      @id @default(autoincrement())
  username   String   @db.VarChar(50)
  email      String   @unique @db.VarChar(100)
  first_name String?  @db.VarChar(50)
  last_name  String?  @db.VarChar(50)
  places     places[]
  trips      trips[]
}
